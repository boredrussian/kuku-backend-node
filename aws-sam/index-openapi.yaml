openapi: 3.0.2
info:
  title:
    signed.移动 Public Index API
  description:
    Lambdaless fetching of source indexes from DynamoDB
  version: 1.0.0
paths:
  /{address}:
    get:
      consumes:
        - 'application/json'
      produces:
        - 'application/json'
      parameters:
        - name: 'address'
          in: 'path'
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/Index'
      x-amazon-apigateway-integration:
        description: Retrieve a specific index from the database 
        credentials:  { 'Fn::GetAtt': PublicAPIRole.Arn }
        uri: { 'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:dynamodb:action/Query' }
        requestTemplates:
          application/json:
            Fn::Sub: 
              - |-
                { 
                  "TableName": "${tableName}",
                  "PrimaryKey": "PK", 
                  "KeyConditionExpression": "PK = :v1 and SK = :v1",
                  "ExpressionAttributeValues": {
                      ":v1": {
                          "S": "source-$input.params("address").replaceAll(".json", "")"
                      }
                  }
                }
              - { tableName: "signed" }
        responses:
          default:
            statusCode: "200"
            responseTemplates:
              application/json: '#set($inputRoot = $input.path("$"))
                                #if($inputRoot.Count == 0)
                                #set($context.responseOverride.status = 404)
                                {"error": "Address not found"}
                                #else
                                $input.path("Items[0].indexJson.S")
                                #end'
        passthroughBehavior: "when_no_match"
        httpMethod: POST
        type: AWS
components:
  schemas:
    Empty:
      type: object
      description: Empty Schema
  responses:
    Index:
      description: Index
      content:
        application/json:
          schema:
            type: string
        