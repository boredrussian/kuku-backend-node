AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "A Node.JS backend for Signed node Deploys - Lambda function with all\
  \ handlers - HTTP API GW - SQS FIFO queue - DynamoDB table \n"
Globals:
  Function:
    Timeout: 30
Resources:
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MainFunction
      Handler: /app.lambdaHandler
      Runtime: nodejs14.x
      Role: arn:aws:iam::164620743841:role/lambda-execution-role
      Environment:
        Variables:
          TEST_2: Value345
      Layers:
      - Ref: DepLayer
      Events:
        SavePost:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /post
        Register:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /register
        CheckLogin:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /register/checkLogin
        ExchangeEphemeralKeysFirstStepLogin:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /login/exchangeEphemeralKeys
        ValidateSessionProofsSecondStepLogin:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /login/validateSessionProofs
        GetUserTokenThirdLoginStepLogin:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /login/getUserToken
        GetUser:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /user
        userUpdate:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /user/update
        GetSubscribed:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: get
            Path: /subscribed
        UploadFile:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /file/upload
        UserFollow:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /user/follow
        SetInbox:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /inbox
        GetInbox:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: get
            Path: /inbox
        UpdateInbox:
          Type: HttpApi
          Properties:
            ApiId:
              Ref: HttpApi
            Method: post
            Path: /inbox/update
        SQSEvent:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - FifoQueue
              - Arn
            BatchSize: 10
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
        - '*'
        AllowHeaders:
        - content-type
        AllowMethods:
        - GET
        - POST
        - OPTIONS
        MaxAge: 600
        AllowCredentials: false
  FifoQueue:
    Type: AWS::SQS::Queue
    Properties:
      FifoQueue: true
      QueueName: Signed.fifo
      VisibilityTimeout: 120
  DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: singed-app-dependencies
      Description: NPM dependencies for the Singed node
      ContentUri: ../../dependencies
      CompatibleRuntimes:
      - nodejs14.x
      LicenseInfo: MIT
      RetentionPolicy: Retain
Outputs:
  SignedApi:
    Description: API Gateway endpoint URL for Prod stage for Signed node
    Value:
      Fn::Sub: https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/
