AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  A Node.JS backend for Signed node
  Deploys
  - Lambda function with all handlers
  - HTTP API GW
  - SQS FIFO queue
  - DynamoDB table 

Globals:
  Function:
    Timeout: 30 # Makes no sense to have a higher timeout as HTTP GW timeout is max 30 seconds

Resources:
  MainFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: /app.lambdaHandler
      Runtime: nodejs14.x
      Role: arn:aws:iam::164620743841:role/lambda-execution-role # TODO: This is a pre-existing role, need to find a better way
      Environment:
        Variables:
          TEST_2: Value345
      Layers:
        - !Ref DepLayer
      Events:
        SavePost:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /post
        Register:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /register
        CheckLogin:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /register/checkLogin
        ExchangeEphemeralKeysFirstStepLogin:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /login/exchangeEphemeralKeys
        ValidateSessionProofsSecondStepLogin:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /login/validateSessionProofs
        GetUserTokenThirdLoginStepLogin:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /login/getUserToken
        GetUser:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /user
        userUpdate:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /user/update
        GetSubscribed:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: get
            Path: /subscribed
        UploadFile:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /file/upload
        UserFollow:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /user/follow
        SetInbox:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /inbox
        GetInbox:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: get
            Path: /inbox
        UpdateInbox:
          Type: HttpApi
          Properties:
            ApiId: !Ref HttpApi
            Method: post
            Path: /inbox/update
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FifoQueue.Arn
            BatchSize: 10
  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowHeaders:
          - content-type
        AllowMethods:
          - GET
          - POST
          - OPTIONS
        MaxAge: 600
        AllowCredentials: false

  FifoQueue:
      Type: AWS::SQS::Queue
      Properties: 
        FifoQueue: true
        QueueName: Signed.fifo
        VisibilityTimeout: 120 # Should be above the Lambda timeout

  DepLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: singed-app-dependencies
      Description: NPM dependencies for the Singed node
      ContentUri: dependencies/
      CompatibleRuntimes:
        - nodejs14.x
      LicenseInfo: "MIT"
      RetentionPolicy: Retain

  SignedTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions: 
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: signed.sam # TODO parametrize the name
      KeySchema: 
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes: 
        - IndexName: Inverted-GSI
          KeySchema: 
          - AttributeName: SK
            KeyType: HASH
          - AttributeName: PK
            KeyType: RANGE
          Projection: 
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput: 
            ReadCapacityUnits: 0
            WriteCapacityUnits: 0

Outputs:
  SignedApi:
    Description: "API Gateway endpoint URL for Prod stage for Signed node"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
